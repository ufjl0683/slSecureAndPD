//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.34209
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace slWCFModule.RemoteService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBChangedConstant", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    public enum DBChangedConstant : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorityChanged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpenAutoCloseTime = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpenAlarmTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorPasswordTimeCycle = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventIntrusion = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventDoorOpenOverTime = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventInvalidCard = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventExternalForce = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventDoorOpen = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemAttributehanged = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduleChanged = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    public partial class DoorBindingData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ControlIDField;
        
        private string DoorColorStringField;
        
        private bool IsConnectedField;
        
        private bool IsDoorOpenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlID {
            get {
                return this.ControlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlIDField, value) != true)) {
                    this.ControlIDField = value;
                    this.RaisePropertyChanged("ControlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorColorString {
            get {
                return this.DoorColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorColorStringField, value) != true)) {
                    this.DoorColorStringField = value;
                    this.RaisePropertyChanged("DoorColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConnected {
            get {
                return this.IsConnectedField;
            }
            set {
                if ((this.IsConnectedField.Equals(value) != true)) {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoorOpen {
            get {
                return this.IsDoorOpenField;
            }
            set {
                if ((this.IsDoorOpenField.Equals(value) != true)) {
                    this.IsDoorOpenField = value;
                    this.RaisePropertyChanged("IsDoorOpen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CCTVBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    public partial class CCTVBindingData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CCTVIDField;
        
        private string CCTVNameField;
        
        private string IPField;
        
        private string MjpegCgiStringField;
        
        private string PasswordField;
        
        private int PlaneIDField;
        
        private int PortField;
        
        private double RotationField;
        
        private double ScaleXField;
        
        private double ScaleYField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CCTVID {
            get {
                return this.CCTVIDField;
            }
            set {
                if ((this.CCTVIDField.Equals(value) != true)) {
                    this.CCTVIDField = value;
                    this.RaisePropertyChanged("CCTVID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCTVName {
            get {
                return this.CCTVNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTVNameField, value) != true)) {
                    this.CCTVNameField = value;
                    this.RaisePropertyChanged("CCTVName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MjpegCgiString {
            get {
                return this.MjpegCgiStringField;
            }
            set {
                if ((object.ReferenceEquals(this.MjpegCgiStringField, value) != true)) {
                    this.MjpegCgiStringField = value;
                    this.RaisePropertyChanged("MjpegCgiString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScaleX {
            get {
                return this.ScaleXField;
            }
            set {
                if ((this.ScaleXField.Equals(value) != true)) {
                    this.ScaleXField = value;
                    this.RaisePropertyChanged("ScaleX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScaleY {
            get {
                return this.ScaleYField;
            }
            set {
                if ((this.ScaleYField.Equals(value) != true)) {
                    this.ScaleYField = value;
                    this.RaisePropertyChanged("ScaleY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    public partial class ItemBindingData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorStringField;
        
        private string ContentField;
        
        private int DegreeField;
        
        private System.Nullable<int> GroupIDField;
        
        private bool IsAlarmField;
        
        private int ItemIDField;
        
        private int PlaneIDField;
        
        private string TypeField;
        
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Degree {
            get {
                return this.DegreeField;
            }
            set {
                if ((this.DegreeField.Equals(value) != true)) {
                    this.DegreeField = value;
                    this.RaisePropertyChanged("Degree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlarm {
            get {
                return this.IsAlarmField;
            }
            set {
                if ((this.IsAlarmField.Equals(value) != true)) {
                    this.IsAlarmField = value;
                    this.RaisePropertyChanged("IsAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemGroupBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    public partial class ItemGroupBindingData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorStringField;
        
        private string ContentField;
        
        private int GroupIDField;
        
        private string GroupNameField;
        
        private int PlaneIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaneDegreeInfo", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    public partial class PlaneDegreeInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AlarmStatusField;
        
        private string ColorStringField;
        
        private int ERIDField;
        
        private string NameField;
        
        private int PlaneIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ERID {
            get {
                return this.ERIDField;
            }
            set {
                if ((this.ERIDField.Equals(value) != true)) {
                    this.ERIDField = value;
                    this.RaisePropertyChanged("ERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonData", Namespace="http://schemas.datacontract.org/2004/07/RoomInterface")]
    public partial struct PersonData : System.ComponentModel.INotifyPropertyChanged {
        
        private string CARDNOField;
        
        private string COMPField;
        
        private bool ISMANUALField;
        
        private string NAMEField;
        
        private System.DateTime TIMEField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CARDNO {
            get {
                return this.CARDNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CARDNOField, value) != true)) {
                    this.CARDNOField = value;
                    this.RaisePropertyChanged("CARDNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string COMP {
            get {
                return this.COMPField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPField, value) != true)) {
                    this.COMPField = value;
                    this.RaisePropertyChanged("COMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ISMANUAL {
            get {
                return this.ISMANUALField;
            }
            set {
                if ((this.ISMANUALField.Equals(value) != true)) {
                    this.ISMANUALField = value;
                    this.RaisePropertyChanged("ISMANUAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime TIME {
            get {
                return this.TIMEField;
            }
            set {
                if ((this.TIMEField.Equals(value) != true)) {
                    this.TIMEField = value;
                    this.RaisePropertyChanged("TIME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    public partial class AlarmData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private slWCFModule.RemoteService.AlarmType AlarmTypeField;
        
        private slWCFModule.RemoteService.CCTVBindingData CCTVBindingDataField;
        
        private string ColorStringField;
        
        private string DescriptionField;
        
        private bool IsForkCCTVEventField;
        
        private int PlaneIDField;
        
        private string PlaneNameField;
        
        private System.DateTime TimeStampField;
        
        private string TimeStampStringField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public slWCFModule.RemoteService.AlarmType AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public slWCFModule.RemoteService.CCTVBindingData CCTVBindingData {
            get {
                return this.CCTVBindingDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTVBindingDataField, value) != true)) {
                    this.CCTVBindingDataField = value;
                    this.RaisePropertyChanged("CCTVBindingData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForkCCTVEvent {
            get {
                return this.IsForkCCTVEventField;
            }
            set {
                if ((this.IsForkCCTVEventField.Equals(value) != true)) {
                    this.IsForkCCTVEventField = value;
                    this.RaisePropertyChanged("IsForkCCTVEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaneName {
            get {
                return this.PlaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaneNameField, value) != true)) {
                    this.PlaneNameField = value;
                    this.RaisePropertyChanged("PlaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStampString {
            get {
                return this.TimeStampStringField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStampStringField, value) != true)) {
                    this.TimeStampStringField = value;
                    this.RaisePropertyChanged("TimeStampString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Secure = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTU = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CARD = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlStatus", Namespace="http://schemas.datacontract.org/2004/07/RoomInterface")]
    public partial class ControlStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool connectField;
        
        private string controlIDField;
        
        private System.DateTime disconnectTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool connect {
            get {
                return this.connectField;
            }
            set {
                if ((this.connectField.Equals(value) != true)) {
                    this.connectField = value;
                    this.RaisePropertyChanged("connect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string controlID {
            get {
                return this.controlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.controlIDField, value) != true)) {
                    this.controlIDField = value;
                    this.RaisePropertyChanged("controlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime disconnectTime {
            get {
                return this.disconnectTimeField;
            }
            set {
                if ((this.disconnectTimeField.Equals(value) != true)) {
                    this.disconnectTimeField = value;
                    this.RaisePropertyChanged("disconnectTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorEventType", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.CardReader")]
    public enum DoorEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorClose = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisConnected = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteService.ISecureService", CallbackContract=typeof(slWCFModule.RemoteService.ISecureServiceCallback))]
    public interface ISecureService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/Register", ReplyAction="http://tempuri.org/ISecureService/RegisterResponse")]
        System.IAsyncResult BeginRegister(string pcname, System.AsyncCallback callback, object asyncState);
        
        string EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/NotifyDBChange", ReplyAction="http://tempuri.org/ISecureService/NotifyDBChangeResponse")]
        System.IAsyncResult BeginNotifyDBChange(slWCFModule.RemoteService.DBChangedConstant constant, string value, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyDBChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/ToServerHello", ReplyAction="http://tempuri.org/ISecureService/ToServerHelloResponse")]
        System.IAsyncResult BeginToServerHello(System.AsyncCallback callback, object asyncState);
        
        void EndToServerHello(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/UnRegist", ReplyAction="http://tempuri.org/ISecureService/UnRegistResponse")]
        System.IAsyncResult BeginUnRegist(string guid, System.AsyncCallback callback, object asyncState);
        
        void EndUnRegist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/ForceOpenDoor", ReplyAction="http://tempuri.org/ISecureService/ForceOpenDoorResponse")]
        System.IAsyncResult BeginForceOpenDoor(string ControllID, System.AsyncCallback callback, object asyncState);
        
        void EndForceOpenDoor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/HookCardReaderEvent", ReplyAction="http://tempuri.org/ISecureService/HookCardReaderEventResponse")]
        System.IAsyncResult BeginHookCardReaderEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState);
        
        void EndHookCardReaderEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/HookAlarmEvent", ReplyAction="http://tempuri.org/ISecureService/HookAlarmEventResponse")]
        System.IAsyncResult BeginHookAlarmEvent(string key, System.AsyncCallback callback, object asyncState);
        
        void EndHookAlarmEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetALLDoorBindingData", ReplyAction="http://tempuri.org/ISecureService/GetALLDoorBindingDataResponse")]
        System.IAsyncResult BeginGetALLDoorBindingData(int PlaneID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> EndGetALLDoorBindingData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetAllCCTVBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllCCTVBindingDataResponse")]
        System.IAsyncResult BeginGetAllCCTVBindingData(int PlaneID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> EndGetAllCCTVBindingData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/HookItemValueChangedEvent", ReplyAction="http://tempuri.org/ISecureService/HookItemValueChangedEventResponse")]
        System.IAsyncResult BeginHookItemValueChangedEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState);
        
        void EndHookItemValueChangedEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetAllItemBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemBindingDataResponse")]
        System.IAsyncResult BeginGetAllItemBindingData(int PlaneID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> EndGetAllItemBindingData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetAllItemGroupBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemGroupBindingDataResponse")]
        System.IAsyncResult BeginGetAllItemGroupBindingData(int PlaneID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> EndGetAllItemGroupBindingData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/SetItemDOValue", ReplyAction="http://tempuri.org/ISecureService/SetItemDOValueResponse")]
        System.IAsyncResult BeginSetItemDOValue(int ItemID, bool val, System.AsyncCallback callback, object asyncState);
        
        void EndSetItemDOValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetAllPlaneInfo", ReplyAction="http://tempuri.org/ISecureService/GetAllPlaneInfoResponse")]
        System.IAsyncResult BeginGetAllPlaneInfo(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> EndGetAllPlaneInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetR23ReaderStatus", ReplyAction="http://tempuri.org/ISecureService/GetR23ReaderStatusResponse")]
        System.IAsyncResult BeginGetR23ReaderStatus(string ReaderId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetR23ReaderStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/SetR23Parameter", ReplyAction="http://tempuri.org/ISecureService/SetR23ParameterResponse")]
        System.IAsyncResult BeginSetR23Parameter(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23, System.AsyncCallback callback, object asyncState);
        
        bool EndSetR23Parameter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/SetR23EngineRoomRecovery", ReplyAction="http://tempuri.org/ISecureService/SetR23EngineRoomRecoveryResponse")]
        System.IAsyncResult BeginSetR23EngineRoomRecovery(string ErNo, System.AsyncCallback callback, object asyncState);
        
        bool EndSetR23EngineRoomRecovery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetR23RoomPerson", ReplyAction="http://tempuri.org/ISecureService/GetR23RoomPersonResponse")]
        System.IAsyncResult BeginGetR23RoomPerson(string ErNo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> EndGetR23RoomPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetR23Progress", ReplyAction="http://tempuri.org/ISecureService/GetR23ProgressResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.DBChangedConstant))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.AlarmData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.AlarmType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.DoorBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.CCTVBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.ItemBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.ItemGroupBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.PlaneDegreeInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.PersonData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.ControlStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slWCFModule.RemoteService.DoorEventType))]
        System.IAsyncResult BeginGetR23Progress(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<object> EndGetR23Progress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetR23GroupErrorMessage", ReplyAction="http://tempuri.org/ISecureService/GetR23GroupErrorMessageResponse")]
        System.IAsyncResult BeginGetR23GroupErrorMessage(System.AsyncCallback callback, object asyncState);
        
        string EndGetR23GroupErrorMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetR23ControlConnect", ReplyAction="http://tempuri.org/ISecureService/GetR23ControlConnectResponse")]
        System.IAsyncResult BeginGetR23ControlConnect(string ControllID, System.AsyncCallback callback, object asyncState);
        
        slWCFModule.RemoteService.ControlStatus EndGetR23ControlConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/GetTotalConnection", ReplyAction="http://tempuri.org/ISecureService/GetTotalConnectionResponse")]
        System.IAsyncResult BeginGetTotalConnection(System.AsyncCallback callback, object asyncState);
        
        int EndGetTotalConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecureService/SupressAlarm", ReplyAction="http://tempuri.org/ISecureService/SupressAlarmResponse")]
        System.IAsyncResult BeginSupressAlarm(int ItemID, System.AsyncCallback callback, object asyncState);
        
        void EndSupressAlarm(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecureServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SayHello")]
        void SayHello(string hello);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SecureDoorEvent")]
        void SecureDoorEvent(slWCFModule.RemoteService.DoorEventType evttype, slWCFModule.RemoteService.DoorBindingData doorBindingData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SecureAlarm")]
        void SecureAlarm(slWCFModule.RemoteService.AlarmData alarmdata);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/ItemValueChangedEvenr")]
        void ItemValueChangedEvenr(slWCFModule.RemoteService.ItemBindingData ItemBindingData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecureServiceChannel : slWCFModule.RemoteService.ISecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetALLDoorBindingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetALLDoorBindingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCCTVBindingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCCTVBindingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllItemBindingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllItemBindingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllItemGroupBindingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllItemGroupBindingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPlaneInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPlaneInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetR23ReaderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetR23ReaderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetR23ParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetR23ParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetR23EngineRoomRecoveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetR23EngineRoomRecoveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetR23RoomPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetR23RoomPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetR23ProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetR23ProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<object> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<object>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetR23GroupErrorMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetR23GroupErrorMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetR23ControlConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetR23ControlConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public slWCFModule.RemoteService.ControlStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((slWCFModule.RemoteService.ControlStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecureServiceClient : System.ServiceModel.DuplexClientBase<slWCFModule.RemoteService.ISecureService>, slWCFModule.RemoteService.ISecureService {
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginNotifyDBChangeDelegate;
        
        private EndOperationDelegate onEndNotifyDBChangeDelegate;
        
        private System.Threading.SendOrPostCallback onNotifyDBChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginToServerHelloDelegate;
        
        private EndOperationDelegate onEndToServerHelloDelegate;
        
        private System.Threading.SendOrPostCallback onToServerHelloCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnRegistDelegate;
        
        private EndOperationDelegate onEndUnRegistDelegate;
        
        private System.Threading.SendOrPostCallback onUnRegistCompletedDelegate;
        
        private BeginOperationDelegate onBeginForceOpenDoorDelegate;
        
        private EndOperationDelegate onEndForceOpenDoorDelegate;
        
        private System.Threading.SendOrPostCallback onForceOpenDoorCompletedDelegate;
        
        private BeginOperationDelegate onBeginHookCardReaderEventDelegate;
        
        private EndOperationDelegate onEndHookCardReaderEventDelegate;
        
        private System.Threading.SendOrPostCallback onHookCardReaderEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginHookAlarmEventDelegate;
        
        private EndOperationDelegate onEndHookAlarmEventDelegate;
        
        private System.Threading.SendOrPostCallback onHookAlarmEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetALLDoorBindingDataDelegate;
        
        private EndOperationDelegate onEndGetALLDoorBindingDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetALLDoorBindingDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCCTVBindingDataDelegate;
        
        private EndOperationDelegate onEndGetAllCCTVBindingDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCCTVBindingDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginHookItemValueChangedEventDelegate;
        
        private EndOperationDelegate onEndHookItemValueChangedEventDelegate;
        
        private System.Threading.SendOrPostCallback onHookItemValueChangedEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllItemBindingDataDelegate;
        
        private EndOperationDelegate onEndGetAllItemBindingDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllItemBindingDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllItemGroupBindingDataDelegate;
        
        private EndOperationDelegate onEndGetAllItemGroupBindingDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllItemGroupBindingDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetItemDOValueDelegate;
        
        private EndOperationDelegate onEndSetItemDOValueDelegate;
        
        private System.Threading.SendOrPostCallback onSetItemDOValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPlaneInfoDelegate;
        
        private EndOperationDelegate onEndGetAllPlaneInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPlaneInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetR23ReaderStatusDelegate;
        
        private EndOperationDelegate onEndGetR23ReaderStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetR23ReaderStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetR23ParameterDelegate;
        
        private EndOperationDelegate onEndSetR23ParameterDelegate;
        
        private System.Threading.SendOrPostCallback onSetR23ParameterCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetR23EngineRoomRecoveryDelegate;
        
        private EndOperationDelegate onEndSetR23EngineRoomRecoveryDelegate;
        
        private System.Threading.SendOrPostCallback onSetR23EngineRoomRecoveryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetR23RoomPersonDelegate;
        
        private EndOperationDelegate onEndGetR23RoomPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetR23RoomPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetR23ProgressDelegate;
        
        private EndOperationDelegate onEndGetR23ProgressDelegate;
        
        private System.Threading.SendOrPostCallback onGetR23ProgressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetR23GroupErrorMessageDelegate;
        
        private EndOperationDelegate onEndGetR23GroupErrorMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetR23GroupErrorMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetR23ControlConnectDelegate;
        
        private EndOperationDelegate onEndGetR23ControlConnectDelegate;
        
        private System.Threading.SendOrPostCallback onGetR23ControlConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalConnectionDelegate;
        
        private EndOperationDelegate onEndGetTotalConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginSupressAlarmDelegate;
        
        private EndOperationDelegate onEndSupressAlarmDelegate;
        
        private System.Threading.SendOrPostCallback onSupressAlarmCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public SecureServiceClient(string endpointConfigurationName) : 
                this(new SecureServiceClientCallback(), endpointConfigurationName) {
        }
        
        private SecureServiceClient(SecureServiceClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public SecureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new SecureServiceClientCallback(), binding, remoteAddress) {
        }
        
        private SecureServiceClient(SecureServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public SecureServiceClient() : 
                this(new SecureServiceClientCallback()) {
        }
        
        private SecureServiceClient(SecureServiceClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("無法設定 CookieContainer。請確定繫結包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NotifyDBChangeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ToServerHelloCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnRegistCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ForceOpenDoorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HookCardReaderEventCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HookAlarmEventCompleted;
        
        public event System.EventHandler<GetALLDoorBindingDataCompletedEventArgs> GetALLDoorBindingDataCompleted;
        
        public event System.EventHandler<GetAllCCTVBindingDataCompletedEventArgs> GetAllCCTVBindingDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HookItemValueChangedEventCompleted;
        
        public event System.EventHandler<GetAllItemBindingDataCompletedEventArgs> GetAllItemBindingDataCompleted;
        
        public event System.EventHandler<GetAllItemGroupBindingDataCompletedEventArgs> GetAllItemGroupBindingDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetItemDOValueCompleted;
        
        public event System.EventHandler<GetAllPlaneInfoCompletedEventArgs> GetAllPlaneInfoCompleted;
        
        public event System.EventHandler<GetR23ReaderStatusCompletedEventArgs> GetR23ReaderStatusCompleted;
        
        public event System.EventHandler<SetR23ParameterCompletedEventArgs> SetR23ParameterCompleted;
        
        public event System.EventHandler<SetR23EngineRoomRecoveryCompletedEventArgs> SetR23EngineRoomRecoveryCompleted;
        
        public event System.EventHandler<GetR23RoomPersonCompletedEventArgs> GetR23RoomPersonCompleted;
        
        public event System.EventHandler<GetR23ProgressCompletedEventArgs> GetR23ProgressCompleted;
        
        public event System.EventHandler<GetR23GroupErrorMessageCompletedEventArgs> GetR23GroupErrorMessageCompleted;
        
        public event System.EventHandler<GetR23ControlConnectCompletedEventArgs> GetR23ControlConnectCompleted;
        
        public event System.EventHandler<GetTotalConnectionCompletedEventArgs> GetTotalConnectionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SupressAlarmCompleted;
        
        public event System.EventHandler<SayHelloReceivedEventArgs> SayHelloReceived;
        
        public event System.EventHandler<SecureDoorEventReceivedEventArgs> SecureDoorEventReceived;
        
        public event System.EventHandler<SecureAlarmReceivedEventArgs> SecureAlarmReceived;
        
        public event System.EventHandler<ItemValueChangedEvenrReceivedEventArgs> ItemValueChangedEvenrReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginRegister(string pcname, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(pcname, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string slWCFModule.RemoteService.ISecureService.EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string pcname = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginRegister(pcname, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            string retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string pcname) {
            this.RegisterAsync(pcname, null);
        }
        
        public void RegisterAsync(string pcname, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        pcname}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginNotifyDBChange(slWCFModule.RemoteService.DBChangedConstant constant, string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNotifyDBChange(constant, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndNotifyDBChange(System.IAsyncResult result) {
            base.Channel.EndNotifyDBChange(result);
        }
        
        private System.IAsyncResult OnBeginNotifyDBChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            slWCFModule.RemoteService.DBChangedConstant constant = ((slWCFModule.RemoteService.DBChangedConstant)(inValues[0]));
            string value = ((string)(inValues[1]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginNotifyDBChange(constant, value, callback, asyncState);
        }
        
        private object[] OnEndNotifyDBChange(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndNotifyDBChange(result);
            return null;
        }
        
        private void OnNotifyDBChangeCompleted(object state) {
            if ((this.NotifyDBChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NotifyDBChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NotifyDBChangeAsync(slWCFModule.RemoteService.DBChangedConstant constant, string value) {
            this.NotifyDBChangeAsync(constant, value, null);
        }
        
        public void NotifyDBChangeAsync(slWCFModule.RemoteService.DBChangedConstant constant, string value, object userState) {
            if ((this.onBeginNotifyDBChangeDelegate == null)) {
                this.onBeginNotifyDBChangeDelegate = new BeginOperationDelegate(this.OnBeginNotifyDBChange);
            }
            if ((this.onEndNotifyDBChangeDelegate == null)) {
                this.onEndNotifyDBChangeDelegate = new EndOperationDelegate(this.OnEndNotifyDBChange);
            }
            if ((this.onNotifyDBChangeCompletedDelegate == null)) {
                this.onNotifyDBChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNotifyDBChangeCompleted);
            }
            base.InvokeAsync(this.onBeginNotifyDBChangeDelegate, new object[] {
                        constant,
                        value}, this.onEndNotifyDBChangeDelegate, this.onNotifyDBChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginToServerHello(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginToServerHello(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndToServerHello(System.IAsyncResult result) {
            base.Channel.EndToServerHello(result);
        }
        
        private System.IAsyncResult OnBeginToServerHello(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginToServerHello(callback, asyncState);
        }
        
        private object[] OnEndToServerHello(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndToServerHello(result);
            return null;
        }
        
        private void OnToServerHelloCompleted(object state) {
            if ((this.ToServerHelloCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToServerHelloCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ToServerHelloAsync() {
            this.ToServerHelloAsync(null);
        }
        
        public void ToServerHelloAsync(object userState) {
            if ((this.onBeginToServerHelloDelegate == null)) {
                this.onBeginToServerHelloDelegate = new BeginOperationDelegate(this.OnBeginToServerHello);
            }
            if ((this.onEndToServerHelloDelegate == null)) {
                this.onEndToServerHelloDelegate = new EndOperationDelegate(this.OnEndToServerHello);
            }
            if ((this.onToServerHelloCompletedDelegate == null)) {
                this.onToServerHelloCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToServerHelloCompleted);
            }
            base.InvokeAsync(this.onBeginToServerHelloDelegate, null, this.onEndToServerHelloDelegate, this.onToServerHelloCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginUnRegist(string guid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnRegist(guid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndUnRegist(System.IAsyncResult result) {
            base.Channel.EndUnRegist(result);
        }
        
        private System.IAsyncResult OnBeginUnRegist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string guid = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginUnRegist(guid, callback, asyncState);
        }
        
        private object[] OnEndUnRegist(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndUnRegist(result);
            return null;
        }
        
        private void OnUnRegistCompleted(object state) {
            if ((this.UnRegistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnRegistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnRegistAsync(string guid) {
            this.UnRegistAsync(guid, null);
        }
        
        public void UnRegistAsync(string guid, object userState) {
            if ((this.onBeginUnRegistDelegate == null)) {
                this.onBeginUnRegistDelegate = new BeginOperationDelegate(this.OnBeginUnRegist);
            }
            if ((this.onEndUnRegistDelegate == null)) {
                this.onEndUnRegistDelegate = new EndOperationDelegate(this.OnEndUnRegist);
            }
            if ((this.onUnRegistCompletedDelegate == null)) {
                this.onUnRegistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnRegistCompleted);
            }
            base.InvokeAsync(this.onBeginUnRegistDelegate, new object[] {
                        guid}, this.onEndUnRegistDelegate, this.onUnRegistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginForceOpenDoor(string ControllID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForceOpenDoor(ControllID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndForceOpenDoor(System.IAsyncResult result) {
            base.Channel.EndForceOpenDoor(result);
        }
        
        private System.IAsyncResult OnBeginForceOpenDoor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string ControllID = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginForceOpenDoor(ControllID, callback, asyncState);
        }
        
        private object[] OnEndForceOpenDoor(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndForceOpenDoor(result);
            return null;
        }
        
        private void OnForceOpenDoorCompleted(object state) {
            if ((this.ForceOpenDoorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForceOpenDoorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForceOpenDoorAsync(string ControllID) {
            this.ForceOpenDoorAsync(ControllID, null);
        }
        
        public void ForceOpenDoorAsync(string ControllID, object userState) {
            if ((this.onBeginForceOpenDoorDelegate == null)) {
                this.onBeginForceOpenDoorDelegate = new BeginOperationDelegate(this.OnBeginForceOpenDoor);
            }
            if ((this.onEndForceOpenDoorDelegate == null)) {
                this.onEndForceOpenDoorDelegate = new EndOperationDelegate(this.OnEndForceOpenDoor);
            }
            if ((this.onForceOpenDoorCompletedDelegate == null)) {
                this.onForceOpenDoorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForceOpenDoorCompleted);
            }
            base.InvokeAsync(this.onBeginForceOpenDoorDelegate, new object[] {
                        ControllID}, this.onEndForceOpenDoorDelegate, this.onForceOpenDoorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginHookCardReaderEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHookCardReaderEvent(key, PlaneId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndHookCardReaderEvent(System.IAsyncResult result) {
            base.Channel.EndHookCardReaderEvent(result);
        }
        
        private System.IAsyncResult OnBeginHookCardReaderEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string key = ((string)(inValues[0]));
            int PlaneId = ((int)(inValues[1]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginHookCardReaderEvent(key, PlaneId, callback, asyncState);
        }
        
        private object[] OnEndHookCardReaderEvent(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndHookCardReaderEvent(result);
            return null;
        }
        
        private void OnHookCardReaderEventCompleted(object state) {
            if ((this.HookCardReaderEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HookCardReaderEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HookCardReaderEventAsync(string key, int PlaneId) {
            this.HookCardReaderEventAsync(key, PlaneId, null);
        }
        
        public void HookCardReaderEventAsync(string key, int PlaneId, object userState) {
            if ((this.onBeginHookCardReaderEventDelegate == null)) {
                this.onBeginHookCardReaderEventDelegate = new BeginOperationDelegate(this.OnBeginHookCardReaderEvent);
            }
            if ((this.onEndHookCardReaderEventDelegate == null)) {
                this.onEndHookCardReaderEventDelegate = new EndOperationDelegate(this.OnEndHookCardReaderEvent);
            }
            if ((this.onHookCardReaderEventCompletedDelegate == null)) {
                this.onHookCardReaderEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHookCardReaderEventCompleted);
            }
            base.InvokeAsync(this.onBeginHookCardReaderEventDelegate, new object[] {
                        key,
                        PlaneId}, this.onEndHookCardReaderEventDelegate, this.onHookCardReaderEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginHookAlarmEvent(string key, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHookAlarmEvent(key, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndHookAlarmEvent(System.IAsyncResult result) {
            base.Channel.EndHookAlarmEvent(result);
        }
        
        private System.IAsyncResult OnBeginHookAlarmEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string key = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginHookAlarmEvent(key, callback, asyncState);
        }
        
        private object[] OnEndHookAlarmEvent(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndHookAlarmEvent(result);
            return null;
        }
        
        private void OnHookAlarmEventCompleted(object state) {
            if ((this.HookAlarmEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HookAlarmEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HookAlarmEventAsync(string key) {
            this.HookAlarmEventAsync(key, null);
        }
        
        public void HookAlarmEventAsync(string key, object userState) {
            if ((this.onBeginHookAlarmEventDelegate == null)) {
                this.onBeginHookAlarmEventDelegate = new BeginOperationDelegate(this.OnBeginHookAlarmEvent);
            }
            if ((this.onEndHookAlarmEventDelegate == null)) {
                this.onEndHookAlarmEventDelegate = new EndOperationDelegate(this.OnEndHookAlarmEvent);
            }
            if ((this.onHookAlarmEventCompletedDelegate == null)) {
                this.onHookAlarmEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHookAlarmEventCompleted);
            }
            base.InvokeAsync(this.onBeginHookAlarmEventDelegate, new object[] {
                        key}, this.onEndHookAlarmEventDelegate, this.onHookAlarmEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetALLDoorBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetALLDoorBindingData(PlaneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> slWCFModule.RemoteService.ISecureService.EndGetALLDoorBindingData(System.IAsyncResult result) {
            return base.Channel.EndGetALLDoorBindingData(result);
        }
        
        private System.IAsyncResult OnBeginGetALLDoorBindingData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int PlaneID = ((int)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetALLDoorBindingData(PlaneID, callback, asyncState);
        }
        
        private object[] OnEndGetALLDoorBindingData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetALLDoorBindingData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetALLDoorBindingDataCompleted(object state) {
            if ((this.GetALLDoorBindingDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetALLDoorBindingDataCompleted(this, new GetALLDoorBindingDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetALLDoorBindingDataAsync(int PlaneID) {
            this.GetALLDoorBindingDataAsync(PlaneID, null);
        }
        
        public void GetALLDoorBindingDataAsync(int PlaneID, object userState) {
            if ((this.onBeginGetALLDoorBindingDataDelegate == null)) {
                this.onBeginGetALLDoorBindingDataDelegate = new BeginOperationDelegate(this.OnBeginGetALLDoorBindingData);
            }
            if ((this.onEndGetALLDoorBindingDataDelegate == null)) {
                this.onEndGetALLDoorBindingDataDelegate = new EndOperationDelegate(this.OnEndGetALLDoorBindingData);
            }
            if ((this.onGetALLDoorBindingDataCompletedDelegate == null)) {
                this.onGetALLDoorBindingDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetALLDoorBindingDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetALLDoorBindingDataDelegate, new object[] {
                        PlaneID}, this.onEndGetALLDoorBindingDataDelegate, this.onGetALLDoorBindingDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetAllCCTVBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCCTVBindingData(PlaneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> slWCFModule.RemoteService.ISecureService.EndGetAllCCTVBindingData(System.IAsyncResult result) {
            return base.Channel.EndGetAllCCTVBindingData(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCCTVBindingData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int PlaneID = ((int)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetAllCCTVBindingData(PlaneID, callback, asyncState);
        }
        
        private object[] OnEndGetAllCCTVBindingData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetAllCCTVBindingData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCCTVBindingDataCompleted(object state) {
            if ((this.GetAllCCTVBindingDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCCTVBindingDataCompleted(this, new GetAllCCTVBindingDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCCTVBindingDataAsync(int PlaneID) {
            this.GetAllCCTVBindingDataAsync(PlaneID, null);
        }
        
        public void GetAllCCTVBindingDataAsync(int PlaneID, object userState) {
            if ((this.onBeginGetAllCCTVBindingDataDelegate == null)) {
                this.onBeginGetAllCCTVBindingDataDelegate = new BeginOperationDelegate(this.OnBeginGetAllCCTVBindingData);
            }
            if ((this.onEndGetAllCCTVBindingDataDelegate == null)) {
                this.onEndGetAllCCTVBindingDataDelegate = new EndOperationDelegate(this.OnEndGetAllCCTVBindingData);
            }
            if ((this.onGetAllCCTVBindingDataCompletedDelegate == null)) {
                this.onGetAllCCTVBindingDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCCTVBindingDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCCTVBindingDataDelegate, new object[] {
                        PlaneID}, this.onEndGetAllCCTVBindingDataDelegate, this.onGetAllCCTVBindingDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginHookItemValueChangedEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHookItemValueChangedEvent(key, PlaneId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndHookItemValueChangedEvent(System.IAsyncResult result) {
            base.Channel.EndHookItemValueChangedEvent(result);
        }
        
        private System.IAsyncResult OnBeginHookItemValueChangedEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string key = ((string)(inValues[0]));
            int PlaneId = ((int)(inValues[1]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginHookItemValueChangedEvent(key, PlaneId, callback, asyncState);
        }
        
        private object[] OnEndHookItemValueChangedEvent(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndHookItemValueChangedEvent(result);
            return null;
        }
        
        private void OnHookItemValueChangedEventCompleted(object state) {
            if ((this.HookItemValueChangedEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HookItemValueChangedEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HookItemValueChangedEventAsync(string key, int PlaneId) {
            this.HookItemValueChangedEventAsync(key, PlaneId, null);
        }
        
        public void HookItemValueChangedEventAsync(string key, int PlaneId, object userState) {
            if ((this.onBeginHookItemValueChangedEventDelegate == null)) {
                this.onBeginHookItemValueChangedEventDelegate = new BeginOperationDelegate(this.OnBeginHookItemValueChangedEvent);
            }
            if ((this.onEndHookItemValueChangedEventDelegate == null)) {
                this.onEndHookItemValueChangedEventDelegate = new EndOperationDelegate(this.OnEndHookItemValueChangedEvent);
            }
            if ((this.onHookItemValueChangedEventCompletedDelegate == null)) {
                this.onHookItemValueChangedEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHookItemValueChangedEventCompleted);
            }
            base.InvokeAsync(this.onBeginHookItemValueChangedEventDelegate, new object[] {
                        key,
                        PlaneId}, this.onEndHookItemValueChangedEventDelegate, this.onHookItemValueChangedEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetAllItemBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllItemBindingData(PlaneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> slWCFModule.RemoteService.ISecureService.EndGetAllItemBindingData(System.IAsyncResult result) {
            return base.Channel.EndGetAllItemBindingData(result);
        }
        
        private System.IAsyncResult OnBeginGetAllItemBindingData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int PlaneID = ((int)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetAllItemBindingData(PlaneID, callback, asyncState);
        }
        
        private object[] OnEndGetAllItemBindingData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetAllItemBindingData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllItemBindingDataCompleted(object state) {
            if ((this.GetAllItemBindingDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllItemBindingDataCompleted(this, new GetAllItemBindingDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllItemBindingDataAsync(int PlaneID) {
            this.GetAllItemBindingDataAsync(PlaneID, null);
        }
        
        public void GetAllItemBindingDataAsync(int PlaneID, object userState) {
            if ((this.onBeginGetAllItemBindingDataDelegate == null)) {
                this.onBeginGetAllItemBindingDataDelegate = new BeginOperationDelegate(this.OnBeginGetAllItemBindingData);
            }
            if ((this.onEndGetAllItemBindingDataDelegate == null)) {
                this.onEndGetAllItemBindingDataDelegate = new EndOperationDelegate(this.OnEndGetAllItemBindingData);
            }
            if ((this.onGetAllItemBindingDataCompletedDelegate == null)) {
                this.onGetAllItemBindingDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllItemBindingDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllItemBindingDataDelegate, new object[] {
                        PlaneID}, this.onEndGetAllItemBindingDataDelegate, this.onGetAllItemBindingDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetAllItemGroupBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllItemGroupBindingData(PlaneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> slWCFModule.RemoteService.ISecureService.EndGetAllItemGroupBindingData(System.IAsyncResult result) {
            return base.Channel.EndGetAllItemGroupBindingData(result);
        }
        
        private System.IAsyncResult OnBeginGetAllItemGroupBindingData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int PlaneID = ((int)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetAllItemGroupBindingData(PlaneID, callback, asyncState);
        }
        
        private object[] OnEndGetAllItemGroupBindingData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetAllItemGroupBindingData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllItemGroupBindingDataCompleted(object state) {
            if ((this.GetAllItemGroupBindingDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllItemGroupBindingDataCompleted(this, new GetAllItemGroupBindingDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllItemGroupBindingDataAsync(int PlaneID) {
            this.GetAllItemGroupBindingDataAsync(PlaneID, null);
        }
        
        public void GetAllItemGroupBindingDataAsync(int PlaneID, object userState) {
            if ((this.onBeginGetAllItemGroupBindingDataDelegate == null)) {
                this.onBeginGetAllItemGroupBindingDataDelegate = new BeginOperationDelegate(this.OnBeginGetAllItemGroupBindingData);
            }
            if ((this.onEndGetAllItemGroupBindingDataDelegate == null)) {
                this.onEndGetAllItemGroupBindingDataDelegate = new EndOperationDelegate(this.OnEndGetAllItemGroupBindingData);
            }
            if ((this.onGetAllItemGroupBindingDataCompletedDelegate == null)) {
                this.onGetAllItemGroupBindingDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllItemGroupBindingDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllItemGroupBindingDataDelegate, new object[] {
                        PlaneID}, this.onEndGetAllItemGroupBindingDataDelegate, this.onGetAllItemGroupBindingDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginSetItemDOValue(int ItemID, bool val, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetItemDOValue(ItemID, val, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndSetItemDOValue(System.IAsyncResult result) {
            base.Channel.EndSetItemDOValue(result);
        }
        
        private System.IAsyncResult OnBeginSetItemDOValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int ItemID = ((int)(inValues[0]));
            bool val = ((bool)(inValues[1]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginSetItemDOValue(ItemID, val, callback, asyncState);
        }
        
        private object[] OnEndSetItemDOValue(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndSetItemDOValue(result);
            return null;
        }
        
        private void OnSetItemDOValueCompleted(object state) {
            if ((this.SetItemDOValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetItemDOValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetItemDOValueAsync(int ItemID, bool val) {
            this.SetItemDOValueAsync(ItemID, val, null);
        }
        
        public void SetItemDOValueAsync(int ItemID, bool val, object userState) {
            if ((this.onBeginSetItemDOValueDelegate == null)) {
                this.onBeginSetItemDOValueDelegate = new BeginOperationDelegate(this.OnBeginSetItemDOValue);
            }
            if ((this.onEndSetItemDOValueDelegate == null)) {
                this.onEndSetItemDOValueDelegate = new EndOperationDelegate(this.OnEndSetItemDOValue);
            }
            if ((this.onSetItemDOValueCompletedDelegate == null)) {
                this.onSetItemDOValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetItemDOValueCompleted);
            }
            base.InvokeAsync(this.onBeginSetItemDOValueDelegate, new object[] {
                        ItemID,
                        val}, this.onEndSetItemDOValueDelegate, this.onSetItemDOValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetAllPlaneInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPlaneInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> slWCFModule.RemoteService.ISecureService.EndGetAllPlaneInfo(System.IAsyncResult result) {
            return base.Channel.EndGetAllPlaneInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPlaneInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetAllPlaneInfo(callback, asyncState);
        }
        
        private object[] OnEndGetAllPlaneInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetAllPlaneInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPlaneInfoCompleted(object state) {
            if ((this.GetAllPlaneInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPlaneInfoCompleted(this, new GetAllPlaneInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPlaneInfoAsync() {
            this.GetAllPlaneInfoAsync(null);
        }
        
        public void GetAllPlaneInfoAsync(object userState) {
            if ((this.onBeginGetAllPlaneInfoDelegate == null)) {
                this.onBeginGetAllPlaneInfoDelegate = new BeginOperationDelegate(this.OnBeginGetAllPlaneInfo);
            }
            if ((this.onEndGetAllPlaneInfoDelegate == null)) {
                this.onEndGetAllPlaneInfoDelegate = new EndOperationDelegate(this.OnEndGetAllPlaneInfo);
            }
            if ((this.onGetAllPlaneInfoCompletedDelegate == null)) {
                this.onGetAllPlaneInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPlaneInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPlaneInfoDelegate, null, this.onEndGetAllPlaneInfoDelegate, this.onGetAllPlaneInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetR23ReaderStatus(string ReaderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetR23ReaderStatus(ReaderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] slWCFModule.RemoteService.ISecureService.EndGetR23ReaderStatus(System.IAsyncResult result) {
            return base.Channel.EndGetR23ReaderStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetR23ReaderStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string ReaderId = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetR23ReaderStatus(ReaderId, callback, asyncState);
        }
        
        private object[] OnEndGetR23ReaderStatus(System.IAsyncResult result) {
            byte[] retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetR23ReaderStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetR23ReaderStatusCompleted(object state) {
            if ((this.GetR23ReaderStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetR23ReaderStatusCompleted(this, new GetR23ReaderStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetR23ReaderStatusAsync(string ReaderId) {
            this.GetR23ReaderStatusAsync(ReaderId, null);
        }
        
        public void GetR23ReaderStatusAsync(string ReaderId, object userState) {
            if ((this.onBeginGetR23ReaderStatusDelegate == null)) {
                this.onBeginGetR23ReaderStatusDelegate = new BeginOperationDelegate(this.OnBeginGetR23ReaderStatus);
            }
            if ((this.onEndGetR23ReaderStatusDelegate == null)) {
                this.onEndGetR23ReaderStatusDelegate = new EndOperationDelegate(this.OnEndGetR23ReaderStatus);
            }
            if ((this.onGetR23ReaderStatusCompletedDelegate == null)) {
                this.onGetR23ReaderStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetR23ReaderStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetR23ReaderStatusDelegate, new object[] {
                        ReaderId}, this.onEndGetR23ReaderStatusDelegate, this.onGetR23ReaderStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginSetR23Parameter(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetR23Parameter(readerid, RemoOpenTimeR23, DelayTimeR23, LoopErrorAlarmTimeR23, AlarmTimeR23, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool slWCFModule.RemoteService.ISecureService.EndSetR23Parameter(System.IAsyncResult result) {
            return base.Channel.EndSetR23Parameter(result);
        }
        
        private System.IAsyncResult OnBeginSetR23Parameter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string readerid = ((string)(inValues[0]));
            int RemoOpenTimeR23 = ((int)(inValues[1]));
            int DelayTimeR23 = ((int)(inValues[2]));
            int LoopErrorAlarmTimeR23 = ((int)(inValues[3]));
            int AlarmTimeR23 = ((int)(inValues[4]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginSetR23Parameter(readerid, RemoOpenTimeR23, DelayTimeR23, LoopErrorAlarmTimeR23, AlarmTimeR23, callback, asyncState);
        }
        
        private object[] OnEndSetR23Parameter(System.IAsyncResult result) {
            bool retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndSetR23Parameter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetR23ParameterCompleted(object state) {
            if ((this.SetR23ParameterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetR23ParameterCompleted(this, new SetR23ParameterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetR23ParameterAsync(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23) {
            this.SetR23ParameterAsync(readerid, RemoOpenTimeR23, DelayTimeR23, LoopErrorAlarmTimeR23, AlarmTimeR23, null);
        }
        
        public void SetR23ParameterAsync(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23, object userState) {
            if ((this.onBeginSetR23ParameterDelegate == null)) {
                this.onBeginSetR23ParameterDelegate = new BeginOperationDelegate(this.OnBeginSetR23Parameter);
            }
            if ((this.onEndSetR23ParameterDelegate == null)) {
                this.onEndSetR23ParameterDelegate = new EndOperationDelegate(this.OnEndSetR23Parameter);
            }
            if ((this.onSetR23ParameterCompletedDelegate == null)) {
                this.onSetR23ParameterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetR23ParameterCompleted);
            }
            base.InvokeAsync(this.onBeginSetR23ParameterDelegate, new object[] {
                        readerid,
                        RemoOpenTimeR23,
                        DelayTimeR23,
                        LoopErrorAlarmTimeR23,
                        AlarmTimeR23}, this.onEndSetR23ParameterDelegate, this.onSetR23ParameterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginSetR23EngineRoomRecovery(string ErNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetR23EngineRoomRecovery(ErNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool slWCFModule.RemoteService.ISecureService.EndSetR23EngineRoomRecovery(System.IAsyncResult result) {
            return base.Channel.EndSetR23EngineRoomRecovery(result);
        }
        
        private System.IAsyncResult OnBeginSetR23EngineRoomRecovery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string ErNo = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginSetR23EngineRoomRecovery(ErNo, callback, asyncState);
        }
        
        private object[] OnEndSetR23EngineRoomRecovery(System.IAsyncResult result) {
            bool retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndSetR23EngineRoomRecovery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetR23EngineRoomRecoveryCompleted(object state) {
            if ((this.SetR23EngineRoomRecoveryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetR23EngineRoomRecoveryCompleted(this, new SetR23EngineRoomRecoveryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetR23EngineRoomRecoveryAsync(string ErNo) {
            this.SetR23EngineRoomRecoveryAsync(ErNo, null);
        }
        
        public void SetR23EngineRoomRecoveryAsync(string ErNo, object userState) {
            if ((this.onBeginSetR23EngineRoomRecoveryDelegate == null)) {
                this.onBeginSetR23EngineRoomRecoveryDelegate = new BeginOperationDelegate(this.OnBeginSetR23EngineRoomRecovery);
            }
            if ((this.onEndSetR23EngineRoomRecoveryDelegate == null)) {
                this.onEndSetR23EngineRoomRecoveryDelegate = new EndOperationDelegate(this.OnEndSetR23EngineRoomRecovery);
            }
            if ((this.onSetR23EngineRoomRecoveryCompletedDelegate == null)) {
                this.onSetR23EngineRoomRecoveryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetR23EngineRoomRecoveryCompleted);
            }
            base.InvokeAsync(this.onBeginSetR23EngineRoomRecoveryDelegate, new object[] {
                        ErNo}, this.onEndSetR23EngineRoomRecoveryDelegate, this.onSetR23EngineRoomRecoveryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetR23RoomPerson(string ErNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetR23RoomPerson(ErNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> slWCFModule.RemoteService.ISecureService.EndGetR23RoomPerson(System.IAsyncResult result) {
            return base.Channel.EndGetR23RoomPerson(result);
        }
        
        private System.IAsyncResult OnBeginGetR23RoomPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string ErNo = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetR23RoomPerson(ErNo, callback, asyncState);
        }
        
        private object[] OnEndGetR23RoomPerson(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetR23RoomPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetR23RoomPersonCompleted(object state) {
            if ((this.GetR23RoomPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetR23RoomPersonCompleted(this, new GetR23RoomPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetR23RoomPersonAsync(string ErNo) {
            this.GetR23RoomPersonAsync(ErNo, null);
        }
        
        public void GetR23RoomPersonAsync(string ErNo, object userState) {
            if ((this.onBeginGetR23RoomPersonDelegate == null)) {
                this.onBeginGetR23RoomPersonDelegate = new BeginOperationDelegate(this.OnBeginGetR23RoomPerson);
            }
            if ((this.onEndGetR23RoomPersonDelegate == null)) {
                this.onEndGetR23RoomPersonDelegate = new EndOperationDelegate(this.OnEndGetR23RoomPerson);
            }
            if ((this.onGetR23RoomPersonCompletedDelegate == null)) {
                this.onGetR23RoomPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetR23RoomPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetR23RoomPersonDelegate, new object[] {
                        ErNo}, this.onEndGetR23RoomPersonDelegate, this.onGetR23RoomPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetR23Progress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetR23Progress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<object> slWCFModule.RemoteService.ISecureService.EndGetR23Progress(System.IAsyncResult result) {
            return base.Channel.EndGetR23Progress(result);
        }
        
        private System.IAsyncResult OnBeginGetR23Progress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetR23Progress(callback, asyncState);
        }
        
        private object[] OnEndGetR23Progress(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<object> retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetR23Progress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetR23ProgressCompleted(object state) {
            if ((this.GetR23ProgressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetR23ProgressCompleted(this, new GetR23ProgressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetR23ProgressAsync() {
            this.GetR23ProgressAsync(null);
        }
        
        public void GetR23ProgressAsync(object userState) {
            if ((this.onBeginGetR23ProgressDelegate == null)) {
                this.onBeginGetR23ProgressDelegate = new BeginOperationDelegate(this.OnBeginGetR23Progress);
            }
            if ((this.onEndGetR23ProgressDelegate == null)) {
                this.onEndGetR23ProgressDelegate = new EndOperationDelegate(this.OnEndGetR23Progress);
            }
            if ((this.onGetR23ProgressCompletedDelegate == null)) {
                this.onGetR23ProgressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetR23ProgressCompleted);
            }
            base.InvokeAsync(this.onBeginGetR23ProgressDelegate, null, this.onEndGetR23ProgressDelegate, this.onGetR23ProgressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetR23GroupErrorMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetR23GroupErrorMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string slWCFModule.RemoteService.ISecureService.EndGetR23GroupErrorMessage(System.IAsyncResult result) {
            return base.Channel.EndGetR23GroupErrorMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetR23GroupErrorMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetR23GroupErrorMessage(callback, asyncState);
        }
        
        private object[] OnEndGetR23GroupErrorMessage(System.IAsyncResult result) {
            string retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetR23GroupErrorMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetR23GroupErrorMessageCompleted(object state) {
            if ((this.GetR23GroupErrorMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetR23GroupErrorMessageCompleted(this, new GetR23GroupErrorMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetR23GroupErrorMessageAsync() {
            this.GetR23GroupErrorMessageAsync(null);
        }
        
        public void GetR23GroupErrorMessageAsync(object userState) {
            if ((this.onBeginGetR23GroupErrorMessageDelegate == null)) {
                this.onBeginGetR23GroupErrorMessageDelegate = new BeginOperationDelegate(this.OnBeginGetR23GroupErrorMessage);
            }
            if ((this.onEndGetR23GroupErrorMessageDelegate == null)) {
                this.onEndGetR23GroupErrorMessageDelegate = new EndOperationDelegate(this.OnEndGetR23GroupErrorMessage);
            }
            if ((this.onGetR23GroupErrorMessageCompletedDelegate == null)) {
                this.onGetR23GroupErrorMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetR23GroupErrorMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetR23GroupErrorMessageDelegate, null, this.onEndGetR23GroupErrorMessageDelegate, this.onGetR23GroupErrorMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetR23ControlConnect(string ControllID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetR23ControlConnect(ControllID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        slWCFModule.RemoteService.ControlStatus slWCFModule.RemoteService.ISecureService.EndGetR23ControlConnect(System.IAsyncResult result) {
            return base.Channel.EndGetR23ControlConnect(result);
        }
        
        private System.IAsyncResult OnBeginGetR23ControlConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string ControllID = ((string)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetR23ControlConnect(ControllID, callback, asyncState);
        }
        
        private object[] OnEndGetR23ControlConnect(System.IAsyncResult result) {
            slWCFModule.RemoteService.ControlStatus retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetR23ControlConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetR23ControlConnectCompleted(object state) {
            if ((this.GetR23ControlConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetR23ControlConnectCompleted(this, new GetR23ControlConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetR23ControlConnectAsync(string ControllID) {
            this.GetR23ControlConnectAsync(ControllID, null);
        }
        
        public void GetR23ControlConnectAsync(string ControllID, object userState) {
            if ((this.onBeginGetR23ControlConnectDelegate == null)) {
                this.onBeginGetR23ControlConnectDelegate = new BeginOperationDelegate(this.OnBeginGetR23ControlConnect);
            }
            if ((this.onEndGetR23ControlConnectDelegate == null)) {
                this.onEndGetR23ControlConnectDelegate = new EndOperationDelegate(this.OnEndGetR23ControlConnect);
            }
            if ((this.onGetR23ControlConnectCompletedDelegate == null)) {
                this.onGetR23ControlConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetR23ControlConnectCompleted);
            }
            base.InvokeAsync(this.onBeginGetR23ControlConnectDelegate, new object[] {
                        ControllID}, this.onEndGetR23ControlConnectDelegate, this.onGetR23ControlConnectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginGetTotalConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int slWCFModule.RemoteService.ISecureService.EndGetTotalConnection(System.IAsyncResult result) {
            return base.Channel.EndGetTotalConnection(result);
        }
        
        private System.IAsyncResult OnBeginGetTotalConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginGetTotalConnection(callback, asyncState);
        }
        
        private object[] OnEndGetTotalConnection(System.IAsyncResult result) {
            int retVal = ((slWCFModule.RemoteService.ISecureService)(this)).EndGetTotalConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalConnectionCompleted(object state) {
            if ((this.GetTotalConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalConnectionCompleted(this, new GetTotalConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalConnectionAsync() {
            this.GetTotalConnectionAsync(null);
        }
        
        public void GetTotalConnectionAsync(object userState) {
            if ((this.onBeginGetTotalConnectionDelegate == null)) {
                this.onBeginGetTotalConnectionDelegate = new BeginOperationDelegate(this.OnBeginGetTotalConnection);
            }
            if ((this.onEndGetTotalConnectionDelegate == null)) {
                this.onEndGetTotalConnectionDelegate = new EndOperationDelegate(this.OnEndGetTotalConnection);
            }
            if ((this.onGetTotalConnectionCompletedDelegate == null)) {
                this.onGetTotalConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalConnectionDelegate, null, this.onEndGetTotalConnectionDelegate, this.onGetTotalConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult slWCFModule.RemoteService.ISecureService.BeginSupressAlarm(int ItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSupressAlarm(ItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void slWCFModule.RemoteService.ISecureService.EndSupressAlarm(System.IAsyncResult result) {
            base.Channel.EndSupressAlarm(result);
        }
        
        private System.IAsyncResult OnBeginSupressAlarm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int ItemID = ((int)(inValues[0]));
            return ((slWCFModule.RemoteService.ISecureService)(this)).BeginSupressAlarm(ItemID, callback, asyncState);
        }
        
        private object[] OnEndSupressAlarm(System.IAsyncResult result) {
            ((slWCFModule.RemoteService.ISecureService)(this)).EndSupressAlarm(result);
            return null;
        }
        
        private void OnSupressAlarmCompleted(object state) {
            if ((this.SupressAlarmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SupressAlarmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SupressAlarmAsync(int ItemID) {
            this.SupressAlarmAsync(ItemID, null);
        }
        
        public void SupressAlarmAsync(int ItemID, object userState) {
            if ((this.onBeginSupressAlarmDelegate == null)) {
                this.onBeginSupressAlarmDelegate = new BeginOperationDelegate(this.OnBeginSupressAlarm);
            }
            if ((this.onEndSupressAlarmDelegate == null)) {
                this.onEndSupressAlarmDelegate = new EndOperationDelegate(this.OnEndSupressAlarm);
            }
            if ((this.onSupressAlarmCompletedDelegate == null)) {
                this.onSupressAlarmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSupressAlarmCompleted);
            }
            base.InvokeAsync(this.onBeginSupressAlarmDelegate, new object[] {
                        ItemID}, this.onEndSupressAlarmDelegate, this.onSupressAlarmCompletedDelegate, userState);
        }
        
        private void OnSayHelloReceived(object state) {
            if ((this.SayHelloReceived != null)) {
                object[] results = ((object[])(state));
                this.SayHelloReceived(this, new SayHelloReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSecureDoorEventReceived(object state) {
            if ((this.SecureDoorEventReceived != null)) {
                object[] results = ((object[])(state));
                this.SecureDoorEventReceived(this, new SecureDoorEventReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnSecureAlarmReceived(object state) {
            if ((this.SecureAlarmReceived != null)) {
                object[] results = ((object[])(state));
                this.SecureAlarmReceived(this, new SecureAlarmReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnItemValueChangedEvenrReceived(object state) {
            if ((this.ItemValueChangedEvenrReceived != null)) {
                object[] results = ((object[])(state));
                this.ItemValueChangedEvenrReceived(this, new ItemValueChangedEvenrReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && ((((this.SayHelloReceived != null) 
                        || (this.SecureDoorEventReceived != null)) 
                        || (this.SecureAlarmReceived != null)) 
                        || (this.ItemValueChangedEvenrReceived != null)))) {
                throw new System.InvalidOperationException("指定回呼 InstanceContext 後即無法使用回呼事件。請選擇指定回呼 InstanceContext，或是描述回呼事件。");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override slWCFModule.RemoteService.ISecureService CreateChannel() {
            return new SecureServiceClientChannel(this);
        }
        
        private class SecureServiceClientCallback : object, ISecureServiceCallback {
            
            private SecureServiceClient proxy;
            
            public void Initialize(SecureServiceClient proxy) {
                this.proxy = proxy;
            }
            
            public void SayHello(string hello) {
                this.proxy.OnSayHelloReceived(new object[] {
                            hello});
            }
            
            public void SecureDoorEvent(slWCFModule.RemoteService.DoorEventType evttype, slWCFModule.RemoteService.DoorBindingData doorBindingData) {
                this.proxy.OnSecureDoorEventReceived(new object[] {
                            evttype,
                            doorBindingData});
            }
            
            public void SecureAlarm(slWCFModule.RemoteService.AlarmData alarmdata) {
                this.proxy.OnSecureAlarmReceived(new object[] {
                            alarmdata});
            }
            
            public void ItemValueChangedEvenr(slWCFModule.RemoteService.ItemBindingData ItemBindingData) {
                this.proxy.OnItemValueChangedEvenrReceived(new object[] {
                            ItemBindingData});
            }
        }
        
        private class SecureServiceClientChannel : ChannelBase<slWCFModule.RemoteService.ISecureService>, slWCFModule.RemoteService.ISecureService {
            
            public SecureServiceClientChannel(System.ServiceModel.DuplexClientBase<slWCFModule.RemoteService.ISecureService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegister(string pcname, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pcname;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNotifyDBChange(slWCFModule.RemoteService.DBChangedConstant constant, string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = constant;
                _args[1] = value;
                System.IAsyncResult _result = base.BeginInvoke("NotifyDBChange", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNotifyDBChange(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NotifyDBChange", _args, result);
            }
            
            public System.IAsyncResult BeginToServerHello(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ToServerHello", _args, callback, asyncState);
                return _result;
            }
            
            public void EndToServerHello(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ToServerHello", _args, result);
            }
            
            public System.IAsyncResult BeginUnRegist(string guid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = guid;
                System.IAsyncResult _result = base.BeginInvoke("UnRegist", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUnRegist(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UnRegist", _args, result);
            }
            
            public System.IAsyncResult BeginForceOpenDoor(string ControllID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ControllID;
                System.IAsyncResult _result = base.BeginInvoke("ForceOpenDoor", _args, callback, asyncState);
                return _result;
            }
            
            public void EndForceOpenDoor(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ForceOpenDoor", _args, result);
            }
            
            public System.IAsyncResult BeginHookCardReaderEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = key;
                _args[1] = PlaneId;
                System.IAsyncResult _result = base.BeginInvoke("HookCardReaderEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHookCardReaderEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HookCardReaderEvent", _args, result);
            }
            
            public System.IAsyncResult BeginHookAlarmEvent(string key, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = key;
                System.IAsyncResult _result = base.BeginInvoke("HookAlarmEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHookAlarmEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HookAlarmEvent", _args, result);
            }
            
            public System.IAsyncResult BeginGetALLDoorBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PlaneID;
                System.IAsyncResult _result = base.BeginInvoke("GetALLDoorBindingData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> EndGetALLDoorBindingData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.DoorBindingData>)(base.EndInvoke("GetALLDoorBindingData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCCTVBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PlaneID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllCCTVBindingData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> EndGetAllCCTVBindingData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.CCTVBindingData>)(base.EndInvoke("GetAllCCTVBindingData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHookItemValueChangedEvent(string key, int PlaneId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = key;
                _args[1] = PlaneId;
                System.IAsyncResult _result = base.BeginInvoke("HookItemValueChangedEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHookItemValueChangedEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HookItemValueChangedEvent", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllItemBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PlaneID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllItemBindingData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> EndGetAllItemBindingData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemBindingData>)(base.EndInvoke("GetAllItemBindingData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllItemGroupBindingData(int PlaneID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PlaneID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllItemGroupBindingData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> EndGetAllItemGroupBindingData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.ItemGroupBindingData>)(base.EndInvoke("GetAllItemGroupBindingData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetItemDOValue(int ItemID, bool val, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ItemID;
                _args[1] = val;
                System.IAsyncResult _result = base.BeginInvoke("SetItemDOValue", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetItemDOValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetItemDOValue", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllPlaneInfo(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllPlaneInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> EndGetAllPlaneInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PlaneDegreeInfo>)(base.EndInvoke("GetAllPlaneInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetR23ReaderStatus(string ReaderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ReaderId;
                System.IAsyncResult _result = base.BeginInvoke("GetR23ReaderStatus", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetR23ReaderStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetR23ReaderStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetR23Parameter(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = readerid;
                _args[1] = RemoOpenTimeR23;
                _args[2] = DelayTimeR23;
                _args[3] = LoopErrorAlarmTimeR23;
                _args[4] = AlarmTimeR23;
                System.IAsyncResult _result = base.BeginInvoke("SetR23Parameter", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetR23Parameter(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetR23Parameter", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetR23EngineRoomRecovery(string ErNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ErNo;
                System.IAsyncResult _result = base.BeginInvoke("SetR23EngineRoomRecovery", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetR23EngineRoomRecovery(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetR23EngineRoomRecovery", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetR23RoomPerson(string ErNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ErNo;
                System.IAsyncResult _result = base.BeginInvoke("GetR23RoomPerson", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> EndGetR23RoomPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData> _result = ((System.Collections.ObjectModel.ObservableCollection<slWCFModule.RemoteService.PersonData>)(base.EndInvoke("GetR23RoomPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetR23Progress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetR23Progress", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<object> EndGetR23Progress(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<object> _result = ((System.Collections.ObjectModel.ObservableCollection<object>)(base.EndInvoke("GetR23Progress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetR23GroupErrorMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetR23GroupErrorMessage", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetR23GroupErrorMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetR23GroupErrorMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetR23ControlConnect(string ControllID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ControllID;
                System.IAsyncResult _result = base.BeginInvoke("GetR23ControlConnect", _args, callback, asyncState);
                return _result;
            }
            
            public slWCFModule.RemoteService.ControlStatus EndGetR23ControlConnect(System.IAsyncResult result) {
                object[] _args = new object[0];
                slWCFModule.RemoteService.ControlStatus _result = ((slWCFModule.RemoteService.ControlStatus)(base.EndInvoke("GetR23ControlConnect", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTotalConnection(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTotalConnection", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetTotalConnection(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetTotalConnection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSupressAlarm(int ItemID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ItemID;
                System.IAsyncResult _result = base.BeginInvoke("SupressAlarm", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSupressAlarm(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SupressAlarm", _args, result);
            }
        }
    }
    
    public class SayHelloReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SayHelloReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string hello {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    public class SecureDoorEventReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecureDoorEventReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public slWCFModule.RemoteService.DoorEventType evttype {
            get {
                base.RaiseExceptionIfNecessary();
                return ((slWCFModule.RemoteService.DoorEventType)(this.results[0]));
            }
        }
        
        public slWCFModule.RemoteService.DoorBindingData doorBindingData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((slWCFModule.RemoteService.DoorBindingData)(this.results[1]));
            }
        }
    }
    
    public class SecureAlarmReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecureAlarmReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public slWCFModule.RemoteService.AlarmData alarmdata {
            get {
                base.RaiseExceptionIfNecessary();
                return ((slWCFModule.RemoteService.AlarmData)(this.results[0]));
            }
        }
    }
    
    public class ItemValueChangedEvenrReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemValueChangedEvenrReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public slWCFModule.RemoteService.ItemBindingData ItemBindingData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((slWCFModule.RemoteService.ItemBindingData)(this.results[0]));
            }
        }
    }
}
