//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.34209
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace slSecure.Web.SecureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBChangedConstant", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    public enum DBChangedConstant : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorityChanged = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpenAutoCloseTime = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpenAlarmTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorPasswordTimeCycle = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventIntrusion = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventDoorOpenOverTime = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventInvalidCard = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventExternalForce = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventDoorOpen = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemAttributehanged = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduleChanged = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    [System.SerializableAttribute()]
    public partial class DoorBindingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorColorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDoorOpenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlID {
            get {
                return this.ControlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlIDField, value) != true)) {
                    this.ControlIDField = value;
                    this.RaisePropertyChanged("ControlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorColorString {
            get {
                return this.DoorColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorColorStringField, value) != true)) {
                    this.DoorColorStringField = value;
                    this.RaisePropertyChanged("DoorColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConnected {
            get {
                return this.IsConnectedField;
            }
            set {
                if ((this.IsConnectedField.Equals(value) != true)) {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDoorOpen {
            get {
                return this.IsDoorOpenField;
            }
            set {
                if ((this.IsDoorOpenField.Equals(value) != true)) {
                    this.IsDoorOpenField = value;
                    this.RaisePropertyChanged("IsDoorOpen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CCTVBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    [System.SerializableAttribute()]
    public partial class CCTVBindingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CCTVIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCTVNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MjpegCgiStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CCTVID {
            get {
                return this.CCTVIDField;
            }
            set {
                if ((this.CCTVIDField.Equals(value) != true)) {
                    this.CCTVIDField = value;
                    this.RaisePropertyChanged("CCTVID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCTVName {
            get {
                return this.CCTVNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTVNameField, value) != true)) {
                    this.CCTVNameField = value;
                    this.RaisePropertyChanged("CCTVName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MjpegCgiString {
            get {
                return this.MjpegCgiStringField;
            }
            set {
                if ((object.ReferenceEquals(this.MjpegCgiStringField, value) != true)) {
                    this.MjpegCgiStringField = value;
                    this.RaisePropertyChanged("MjpegCgiString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    [System.SerializableAttribute()]
    public partial class ItemBindingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DegreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Degree {
            get {
                return this.DegreeField;
            }
            set {
                if ((this.DegreeField.Equals(value) != true)) {
                    this.DegreeField = value;
                    this.RaisePropertyChanged("Degree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlarm {
            get {
                return this.IsAlarmField;
            }
            set {
                if ((this.IsAlarmField.Equals(value) != true)) {
                    this.IsAlarmField = value;
                    this.RaisePropertyChanged("IsAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((this.ItemIDField.Equals(value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemGroupBindingData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    [System.SerializableAttribute()]
    public partial class ItemGroupBindingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaneDegreeInfo", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.BindingData")]
    [System.SerializableAttribute()]
    public partial class PlaneDegreeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ERID {
            get {
                return this.ERIDField;
            }
            set {
                if ((this.ERIDField.Equals(value) != true)) {
                    this.ERIDField = value;
                    this.RaisePropertyChanged("ERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonData", Namespace="http://schemas.datacontract.org/2004/07/RoomInterface")]
    [System.SerializableAttribute()]
    public partial struct PersonData : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CARDNOField;
        
        private string COMPField;
        
        private bool ISMANUALField;
        
        private string NAMEField;
        
        private System.DateTime TIMEField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CARDNO {
            get {
                return this.CARDNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CARDNOField, value) != true)) {
                    this.CARDNOField = value;
                    this.RaisePropertyChanged("CARDNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string COMP {
            get {
                return this.COMPField;
            }
            set {
                if ((object.ReferenceEquals(this.COMPField, value) != true)) {
                    this.COMPField = value;
                    this.RaisePropertyChanged("COMP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ISMANUAL {
            get {
                return this.ISMANUALField;
            }
            set {
                if ((this.ISMANUALField.Equals(value) != true)) {
                    this.ISMANUALField = value;
                    this.RaisePropertyChanged("ISMANUAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime TIME {
            get {
                return this.TIMEField;
            }
            set {
                if ((this.TIMEField.Equals(value) != true)) {
                    this.TIMEField = value;
                    this.RaisePropertyChanged("TIME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmData", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    [System.SerializableAttribute()]
    public partial class AlarmData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private slSecure.Web.SecureService.AlarmType AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private slSecure.Web.SecureService.CCTVBindingData CCTVBindingDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsForkCCTVEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeStampStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public slSecure.Web.SecureService.AlarmType AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public slSecure.Web.SecureService.CCTVBindingData CCTVBindingData {
            get {
                return this.CCTVBindingDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CCTVBindingDataField, value) != true)) {
                    this.CCTVBindingDataField = value;
                    this.RaisePropertyChanged("CCTVBindingData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorString {
            get {
                return this.ColorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorStringField, value) != true)) {
                    this.ColorStringField = value;
                    this.RaisePropertyChanged("ColorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForkCCTVEvent {
            get {
                return this.IsForkCCTVEventField;
            }
            set {
                if ((this.IsForkCCTVEventField.Equals(value) != true)) {
                    this.IsForkCCTVEventField = value;
                    this.RaisePropertyChanged("IsForkCCTVEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaneID {
            get {
                return this.PlaneIDField;
            }
            set {
                if ((this.PlaneIDField.Equals(value) != true)) {
                    this.PlaneIDField = value;
                    this.RaisePropertyChanged("PlaneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaneName {
            get {
                return this.PlaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaneNameField, value) != true)) {
                    this.PlaneNameField = value;
                    this.RaisePropertyChanged("PlaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeStampString {
            get {
                return this.TimeStampStringField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeStampStringField, value) != true)) {
                    this.TimeStampStringField = value;
                    this.RaisePropertyChanged("TimeStampString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/SecureServer")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Secure = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTU = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PD = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlStatus", Namespace="http://schemas.datacontract.org/2004/07/RoomInterface")]
    [System.SerializableAttribute()]
    public partial class ControlStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool connectField;
        
        private string controlIDField;
        
        private System.DateTime disconnectTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool connect {
            get {
                return this.connectField;
            }
            set {
                if ((this.connectField.Equals(value) != true)) {
                    this.connectField = value;
                    this.RaisePropertyChanged("connect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string controlID {
            get {
                return this.controlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.controlIDField, value) != true)) {
                    this.controlIDField = value;
                    this.RaisePropertyChanged("controlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime disconnectTime {
            get {
                return this.disconnectTimeField;
            }
            set {
                if ((this.disconnectTimeField.Equals(value) != true)) {
                    this.disconnectTimeField = value;
                    this.RaisePropertyChanged("disconnectTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorEventType", Namespace="http://schemas.datacontract.org/2004/07/SecureServer.CardReader")]
    public enum DoorEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorOpen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoorClose = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisConnected = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecureService.ISecureService", CallbackContract=typeof(slSecure.Web.SecureService.ISecureServiceCallback))]
    public interface ISecureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/Register", ReplyAction="http://tempuri.org/ISecureService/RegisterResponse")]
        string Register(string pcname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/Register", ReplyAction="http://tempuri.org/ISecureService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string pcname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/NotifyDBChange", ReplyAction="http://tempuri.org/ISecureService/NotifyDBChangeResponse")]
        void NotifyDBChange(slSecure.Web.SecureService.DBChangedConstant constant, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/NotifyDBChange", ReplyAction="http://tempuri.org/ISecureService/NotifyDBChangeResponse")]
        System.Threading.Tasks.Task NotifyDBChangeAsync(slSecure.Web.SecureService.DBChangedConstant constant, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/ToServerHello", ReplyAction="http://tempuri.org/ISecureService/ToServerHelloResponse")]
        void ToServerHello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/ToServerHello", ReplyAction="http://tempuri.org/ISecureService/ToServerHelloResponse")]
        System.Threading.Tasks.Task ToServerHelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/UnRegist", ReplyAction="http://tempuri.org/ISecureService/UnRegistResponse")]
        void UnRegist(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/UnRegist", ReplyAction="http://tempuri.org/ISecureService/UnRegistResponse")]
        System.Threading.Tasks.Task UnRegistAsync(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/ForceOpenDoor", ReplyAction="http://tempuri.org/ISecureService/ForceOpenDoorResponse")]
        void ForceOpenDoor(string ControllID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/ForceOpenDoor", ReplyAction="http://tempuri.org/ISecureService/ForceOpenDoorResponse")]
        System.Threading.Tasks.Task ForceOpenDoorAsync(string ControllID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookCardReaderEvent", ReplyAction="http://tempuri.org/ISecureService/HookCardReaderEventResponse")]
        void HookCardReaderEvent(string key, int PlaneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookCardReaderEvent", ReplyAction="http://tempuri.org/ISecureService/HookCardReaderEventResponse")]
        System.Threading.Tasks.Task HookCardReaderEventAsync(string key, int PlaneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookAlarmEvent", ReplyAction="http://tempuri.org/ISecureService/HookAlarmEventResponse")]
        void HookAlarmEvent(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookAlarmEvent", ReplyAction="http://tempuri.org/ISecureService/HookAlarmEventResponse")]
        System.Threading.Tasks.Task HookAlarmEventAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetALLDoorBindingData", ReplyAction="http://tempuri.org/ISecureService/GetALLDoorBindingDataResponse")]
        slSecure.Web.SecureService.DoorBindingData[] GetALLDoorBindingData(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetALLDoorBindingData", ReplyAction="http://tempuri.org/ISecureService/GetALLDoorBindingDataResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.DoorBindingData[]> GetALLDoorBindingDataAsync(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllCCTVBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllCCTVBindingDataResponse")]
        slSecure.Web.SecureService.CCTVBindingData[] GetAllCCTVBindingData(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllCCTVBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllCCTVBindingDataResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.CCTVBindingData[]> GetAllCCTVBindingDataAsync(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookItemValueChangedEvent", ReplyAction="http://tempuri.org/ISecureService/HookItemValueChangedEventResponse")]
        void HookItemValueChangedEvent(string key, int PlaneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/HookItemValueChangedEvent", ReplyAction="http://tempuri.org/ISecureService/HookItemValueChangedEventResponse")]
        System.Threading.Tasks.Task HookItemValueChangedEventAsync(string key, int PlaneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllItemBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemBindingDataResponse")]
        slSecure.Web.SecureService.ItemBindingData[] GetAllItemBindingData(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllItemBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemBindingDataResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.ItemBindingData[]> GetAllItemBindingDataAsync(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllItemGroupBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemGroupBindingDataResponse")]
        slSecure.Web.SecureService.ItemGroupBindingData[] GetAllItemGroupBindingData(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllItemGroupBindingData", ReplyAction="http://tempuri.org/ISecureService/GetAllItemGroupBindingDataResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.ItemGroupBindingData[]> GetAllItemGroupBindingDataAsync(int PlaneID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetItemDOValue", ReplyAction="http://tempuri.org/ISecureService/SetItemDOValueResponse")]
        void SetItemDOValue(int ItemID, bool val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetItemDOValue", ReplyAction="http://tempuri.org/ISecureService/SetItemDOValueResponse")]
        System.Threading.Tasks.Task SetItemDOValueAsync(int ItemID, bool val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllPlaneInfo", ReplyAction="http://tempuri.org/ISecureService/GetAllPlaneInfoResponse")]
        slSecure.Web.SecureService.PlaneDegreeInfo[] GetAllPlaneInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetAllPlaneInfo", ReplyAction="http://tempuri.org/ISecureService/GetAllPlaneInfoResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.PlaneDegreeInfo[]> GetAllPlaneInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23ReaderStatus", ReplyAction="http://tempuri.org/ISecureService/GetR23ReaderStatusResponse")]
        byte[] GetR23ReaderStatus(string ReaderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23ReaderStatus", ReplyAction="http://tempuri.org/ISecureService/GetR23ReaderStatusResponse")]
        System.Threading.Tasks.Task<byte[]> GetR23ReaderStatusAsync(string ReaderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetR23Parameter", ReplyAction="http://tempuri.org/ISecureService/SetR23ParameterResponse")]
        bool SetR23Parameter(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetR23Parameter", ReplyAction="http://tempuri.org/ISecureService/SetR23ParameterResponse")]
        System.Threading.Tasks.Task<bool> SetR23ParameterAsync(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetR23EngineRoomRecovery", ReplyAction="http://tempuri.org/ISecureService/SetR23EngineRoomRecoveryResponse")]
        bool SetR23EngineRoomRecovery(string ErNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SetR23EngineRoomRecovery", ReplyAction="http://tempuri.org/ISecureService/SetR23EngineRoomRecoveryResponse")]
        System.Threading.Tasks.Task<bool> SetR23EngineRoomRecoveryAsync(string ErNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23RoomPerson", ReplyAction="http://tempuri.org/ISecureService/GetR23RoomPersonResponse")]
        slSecure.Web.SecureService.PersonData[] GetR23RoomPerson(string ErNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23RoomPerson", ReplyAction="http://tempuri.org/ISecureService/GetR23RoomPersonResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.PersonData[]> GetR23RoomPersonAsync(string ErNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23Progress", ReplyAction="http://tempuri.org/ISecureService/GetR23ProgressResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.DBChangedConstant))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.AlarmData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.AlarmType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.DoorBindingData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.DoorBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.CCTVBindingData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.CCTVBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.ItemBindingData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.ItemBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.ItemGroupBindingData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.ItemGroupBindingData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.PlaneDegreeInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.PlaneDegreeInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.PersonData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.PersonData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.ControlStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(slSecure.Web.SecureService.DoorEventType))]
        object[] GetR23Progress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23Progress", ReplyAction="http://tempuri.org/ISecureService/GetR23ProgressResponse")]
        System.Threading.Tasks.Task<object[]> GetR23ProgressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23GroupErrorMessage", ReplyAction="http://tempuri.org/ISecureService/GetR23GroupErrorMessageResponse")]
        string GetR23GroupErrorMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23GroupErrorMessage", ReplyAction="http://tempuri.org/ISecureService/GetR23GroupErrorMessageResponse")]
        System.Threading.Tasks.Task<string> GetR23GroupErrorMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23ControlConnect", ReplyAction="http://tempuri.org/ISecureService/GetR23ControlConnectResponse")]
        slSecure.Web.SecureService.ControlStatus GetR23ControlConnect(string ControllID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetR23ControlConnect", ReplyAction="http://tempuri.org/ISecureService/GetR23ControlConnectResponse")]
        System.Threading.Tasks.Task<slSecure.Web.SecureService.ControlStatus> GetR23ControlConnectAsync(string ControllID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetTotalConnection", ReplyAction="http://tempuri.org/ISecureService/GetTotalConnectionResponse")]
        int GetTotalConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/GetTotalConnection", ReplyAction="http://tempuri.org/ISecureService/GetTotalConnectionResponse")]
        System.Threading.Tasks.Task<int> GetTotalConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SupressAlarm", ReplyAction="http://tempuri.org/ISecureService/SupressAlarmResponse")]
        void SupressAlarm(int ItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecureService/SupressAlarm", ReplyAction="http://tempuri.org/ISecureService/SupressAlarmResponse")]
        System.Threading.Tasks.Task SupressAlarmAsync(int ItemID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecureServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SayHello")]
        void SayHello(string hello);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SecureDoorEvent")]
        void SecureDoorEvent(slSecure.Web.SecureService.DoorEventType evttype, slSecure.Web.SecureService.DoorBindingData doorBindingData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/SecureAlarm")]
        void SecureAlarm(slSecure.Web.SecureService.AlarmData alarmdata);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISecureService/ItemValueChangedEvenr")]
        void ItemValueChangedEvenr(slSecure.Web.SecureService.ItemBindingData ItemBindingData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecureServiceChannel : slSecure.Web.SecureService.ISecureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecureServiceClient : System.ServiceModel.DuplexClientBase<slSecure.Web.SecureService.ISecureService>, slSecure.Web.SecureService.ISecureService {
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SecureServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Register(string pcname) {
            return base.Channel.Register(pcname);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string pcname) {
            return base.Channel.RegisterAsync(pcname);
        }
        
        public void NotifyDBChange(slSecure.Web.SecureService.DBChangedConstant constant, string value) {
            base.Channel.NotifyDBChange(constant, value);
        }
        
        public System.Threading.Tasks.Task NotifyDBChangeAsync(slSecure.Web.SecureService.DBChangedConstant constant, string value) {
            return base.Channel.NotifyDBChangeAsync(constant, value);
        }
        
        public void ToServerHello() {
            base.Channel.ToServerHello();
        }
        
        public System.Threading.Tasks.Task ToServerHelloAsync() {
            return base.Channel.ToServerHelloAsync();
        }
        
        public void UnRegist(string guid) {
            base.Channel.UnRegist(guid);
        }
        
        public System.Threading.Tasks.Task UnRegistAsync(string guid) {
            return base.Channel.UnRegistAsync(guid);
        }
        
        public void ForceOpenDoor(string ControllID) {
            base.Channel.ForceOpenDoor(ControllID);
        }
        
        public System.Threading.Tasks.Task ForceOpenDoorAsync(string ControllID) {
            return base.Channel.ForceOpenDoorAsync(ControllID);
        }
        
        public void HookCardReaderEvent(string key, int PlaneId) {
            base.Channel.HookCardReaderEvent(key, PlaneId);
        }
        
        public System.Threading.Tasks.Task HookCardReaderEventAsync(string key, int PlaneId) {
            return base.Channel.HookCardReaderEventAsync(key, PlaneId);
        }
        
        public void HookAlarmEvent(string key) {
            base.Channel.HookAlarmEvent(key);
        }
        
        public System.Threading.Tasks.Task HookAlarmEventAsync(string key) {
            return base.Channel.HookAlarmEventAsync(key);
        }
        
        public slSecure.Web.SecureService.DoorBindingData[] GetALLDoorBindingData(int PlaneID) {
            return base.Channel.GetALLDoorBindingData(PlaneID);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.DoorBindingData[]> GetALLDoorBindingDataAsync(int PlaneID) {
            return base.Channel.GetALLDoorBindingDataAsync(PlaneID);
        }
        
        public slSecure.Web.SecureService.CCTVBindingData[] GetAllCCTVBindingData(int PlaneID) {
            return base.Channel.GetAllCCTVBindingData(PlaneID);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.CCTVBindingData[]> GetAllCCTVBindingDataAsync(int PlaneID) {
            return base.Channel.GetAllCCTVBindingDataAsync(PlaneID);
        }
        
        public void HookItemValueChangedEvent(string key, int PlaneId) {
            base.Channel.HookItemValueChangedEvent(key, PlaneId);
        }
        
        public System.Threading.Tasks.Task HookItemValueChangedEventAsync(string key, int PlaneId) {
            return base.Channel.HookItemValueChangedEventAsync(key, PlaneId);
        }
        
        public slSecure.Web.SecureService.ItemBindingData[] GetAllItemBindingData(int PlaneID) {
            return base.Channel.GetAllItemBindingData(PlaneID);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.ItemBindingData[]> GetAllItemBindingDataAsync(int PlaneID) {
            return base.Channel.GetAllItemBindingDataAsync(PlaneID);
        }
        
        public slSecure.Web.SecureService.ItemGroupBindingData[] GetAllItemGroupBindingData(int PlaneID) {
            return base.Channel.GetAllItemGroupBindingData(PlaneID);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.ItemGroupBindingData[]> GetAllItemGroupBindingDataAsync(int PlaneID) {
            return base.Channel.GetAllItemGroupBindingDataAsync(PlaneID);
        }
        
        public void SetItemDOValue(int ItemID, bool val) {
            base.Channel.SetItemDOValue(ItemID, val);
        }
        
        public System.Threading.Tasks.Task SetItemDOValueAsync(int ItemID, bool val) {
            return base.Channel.SetItemDOValueAsync(ItemID, val);
        }
        
        public slSecure.Web.SecureService.PlaneDegreeInfo[] GetAllPlaneInfo() {
            return base.Channel.GetAllPlaneInfo();
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.PlaneDegreeInfo[]> GetAllPlaneInfoAsync() {
            return base.Channel.GetAllPlaneInfoAsync();
        }
        
        public byte[] GetR23ReaderStatus(string ReaderId) {
            return base.Channel.GetR23ReaderStatus(ReaderId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetR23ReaderStatusAsync(string ReaderId) {
            return base.Channel.GetR23ReaderStatusAsync(ReaderId);
        }
        
        public bool SetR23Parameter(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23) {
            return base.Channel.SetR23Parameter(readerid, RemoOpenTimeR23, DelayTimeR23, LoopErrorAlarmTimeR23, AlarmTimeR23);
        }
        
        public System.Threading.Tasks.Task<bool> SetR23ParameterAsync(string readerid, int RemoOpenTimeR23, int DelayTimeR23, int LoopErrorAlarmTimeR23, int AlarmTimeR23) {
            return base.Channel.SetR23ParameterAsync(readerid, RemoOpenTimeR23, DelayTimeR23, LoopErrorAlarmTimeR23, AlarmTimeR23);
        }
        
        public bool SetR23EngineRoomRecovery(string ErNo) {
            return base.Channel.SetR23EngineRoomRecovery(ErNo);
        }
        
        public System.Threading.Tasks.Task<bool> SetR23EngineRoomRecoveryAsync(string ErNo) {
            return base.Channel.SetR23EngineRoomRecoveryAsync(ErNo);
        }
        
        public slSecure.Web.SecureService.PersonData[] GetR23RoomPerson(string ErNo) {
            return base.Channel.GetR23RoomPerson(ErNo);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.PersonData[]> GetR23RoomPersonAsync(string ErNo) {
            return base.Channel.GetR23RoomPersonAsync(ErNo);
        }
        
        public object[] GetR23Progress() {
            return base.Channel.GetR23Progress();
        }
        
        public System.Threading.Tasks.Task<object[]> GetR23ProgressAsync() {
            return base.Channel.GetR23ProgressAsync();
        }
        
        public string GetR23GroupErrorMessage() {
            return base.Channel.GetR23GroupErrorMessage();
        }
        
        public System.Threading.Tasks.Task<string> GetR23GroupErrorMessageAsync() {
            return base.Channel.GetR23GroupErrorMessageAsync();
        }
        
        public slSecure.Web.SecureService.ControlStatus GetR23ControlConnect(string ControllID) {
            return base.Channel.GetR23ControlConnect(ControllID);
        }
        
        public System.Threading.Tasks.Task<slSecure.Web.SecureService.ControlStatus> GetR23ControlConnectAsync(string ControllID) {
            return base.Channel.GetR23ControlConnectAsync(ControllID);
        }
        
        public int GetTotalConnection() {
            return base.Channel.GetTotalConnection();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalConnectionAsync() {
            return base.Channel.GetTotalConnectionAsync();
        }
        
        public void SupressAlarm(int ItemID) {
            base.Channel.SupressAlarm(ItemID);
        }
        
        public System.Threading.Tasks.Task SupressAlarmAsync(int ItemID) {
            return base.Channel.SupressAlarmAsync(ItemID);
        }
    }
}
